; Listing generated by Microsoft (R) Optimizing Compiler Version 19.27.29111.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__F7309570_SDL_stdinc@h DB 01H
__DEF1ED59_SDL_endian@h DB 01H
__09340588_corecrt_math@h DB 01H
__B0C4CEA9_malloc@h DB 01H
__D291391D_SDL_rect@h DB 01H
__9F64F477_grass@c DB 01H
msvcjmc	ENDS
PUBLIC	grass_field_init
PUBLIC	grass_field_update
PUBLIC	grass_grow
PUBLIC	grass_spread
PUBLIC	grass_field_toggle_active_at
PUBLIC	grass_field_draw
PUBLIC	grass_field_clean
PUBLIC	__JustMyCode_Default
EXTRN	__imp_calloc:PROC
EXTRN	__imp_free:PROC
EXTRN	SDL_RenderCopy:PROC
EXTRN	grid_set_data_at:PROC
EXTRN	grid_open_neighbours_at:PROC
EXTRN	rand:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_field_init DD imagerel $LN9
	DD	imagerel $LN9+433
	DD	imagerel $unwind$grass_field_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_field_update DD imagerel $LN16
	DD	imagerel $LN16+422
	DD	imagerel $unwind$grass_field_update
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_grow DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$grass_grow
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_spread DD imagerel $LN4
	DD	imagerel $LN4+204
	DD	imagerel $unwind$grass_spread
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_field_toggle_active_at DD imagerel $LN6
	DD	imagerel $LN6+340
	DD	imagerel $unwind$grass_field_toggle_active_at
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_field_draw DD imagerel $LN9
	DD	imagerel $LN9+226
	DD	imagerel $unwind$grass_field_draw
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$grass_field_clean DD imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$grass_field_clean
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_field_clean DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_field_draw DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_field_toggle_active_at DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_spread DD 035054019H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
grass_spread$rtcName$0 DB 061H
	DB	064H
	DB	06aH
	DB	05fH
	DB	06eH
	DB	06fH
	DB	064H
	DB	065H
	DB	073H
	DB	00H
	ORG $+6
grass_spread$rtcName$1 DB 06fH
	DB	070H
	DB	065H
	DB	06eH
	DB	05fH
	DB	063H
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	00H
	ORG $+5
grass_spread$rtcName$2 DB 072H
	DB	061H
	DB	06eH
	DB	064H
	DB	06fH
	DB	06dH
	DB	05fH
	DB	069H
	DB	06eH
	DB	064H
	DB	065H
	DB	078H
	DB	00H
	ORG $+3
grass_spread$rtcVarDesc DD 098H
	DD	08H
	DQ	FLAT:grass_spread$rtcName$2
	DD	074H
	DD	04H
	DQ	FLAT:grass_spread$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:grass_spread$rtcName$0
	ORG $+144
grass_spread$rtcFrameData DD 03H
	DD	00H
	DQ	FLAT:grass_spread$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_grow DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_field_update DD 025052a01H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
grass_field_update$rtcName$0 DB 069H
	DB	06eH
	DB	064H
	DB	065H
	DB	078H
	DB	00H
	ORG $+10
grass_field_update$rtcVarDesc DD 048H
	DD	08H
	DQ	FLAT:grass_field_update$rtcName$0
	ORG $+48
grass_field_update$rtcFrameData DD 01H
	DD	00H
	DQ	FLAT:grass_field_update$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$grass_field_init DD 025063a01H
	DD	011e2323H
	DD	070170028H
	DD	050156016H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_field_clean
_TEXT	SEGMENT
field$ = 224
grass_field_clean PROC					; COMDAT

; 145  : {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 146  :     if(field->pool)

	mov	rax, QWORD PTR field$[rbp]
	cmp	QWORD PTR [rax+24], 0
	je	SHORT $LN2@grass_fiel

; 147  :         free(field->pool);

	mov	rax, QWORD PTR field$[rbp]
	mov	rcx, QWORD PTR [rax+24]
	call	QWORD PTR __imp_free
$LN2@grass_fiel:

; 148  :     field->pool = NULL;

	mov	rax, QWORD PTR field$[rbp]
	mov	QWORD PTR [rax+24], 0

; 149  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
grass_field_clean ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_field_draw
_TEXT	SEGMENT
temp$ = 8
y$1 = 36
x$2 = 68
p_renderer$ = 320
p_texture$ = 328
p_field$ = 336
grass_field_draw PROC					; COMDAT

; 130  : {

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 131  :     grass* temp;
; 132  :     for(int y = 0; y < p_field->dimensions.y; y++)

	mov	DWORD PTR y$1[rbp], 0
	jmp	SHORT $LN4@grass_fiel
$LN2@grass_fiel:
	mov	eax, DWORD PTR y$1[rbp]
	inc	eax
	mov	DWORD PTR y$1[rbp], eax
$LN4@grass_fiel:
	mov	rax, QWORD PTR p_field$[rbp]
	mov	eax, DWORD PTR [rax+36]
	cmp	DWORD PTR y$1[rbp], eax
	jge	SHORT $LN3@grass_fiel

; 133  :     {
; 134  :         for(int x = 0; x < p_field->dimensions.x; x++)

	mov	DWORD PTR x$2[rbp], 0
	jmp	SHORT $LN7@grass_fiel
$LN5@grass_fiel:
	mov	eax, DWORD PTR x$2[rbp]
	inc	eax
	mov	DWORD PTR x$2[rbp], eax
$LN7@grass_fiel:
	mov	rax, QWORD PTR p_field$[rbp]
	mov	eax, DWORD PTR [rax+32]
	cmp	DWORD PTR x$2[rbp], eax
	jge	SHORT $LN6@grass_fiel

; 135  :         {
; 136  :             temp = &p_field->pool[y * p_field->dimensions.x + x];

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR y$1[rbp]
	imul	ecx, DWORD PTR [rax+32]
	mov	eax, ecx
	add	eax, DWORD PTR x$2[rbp]
	cdqe
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR p_field$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR temp$[rbp], rax

; 137  :             SDL_RenderCopy(p_renderer,

	mov	rax, QWORD PTR temp$[rbp]
	add	rax, 24
	mov	rcx, QWORD PTR temp$[rbp]
	add	rcx, 8
	mov	r9, rax
	mov	r8, rcx
	mov	rdx, QWORD PTR p_texture$[rbp]
	mov	rcx, QWORD PTR p_renderer$[rbp]
	call	SDL_RenderCopy

; 138  :                            p_texture,
; 139  :                            &temp->source,
; 140  :                            &temp->destination);
; 141  :         }

	jmp	SHORT $LN5@grass_fiel
$LN6@grass_fiel:

; 142  :     }

	jmp	$LN2@grass_fiel
$LN3@grass_fiel:

; 143  : }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
grass_field_draw ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_field_toggle_active_at
_TEXT	SEGMENT
temp$ = 8
p_field$ = 256
p_index$ = 264
p_value$ = 272
grass_field_toggle_active_at PROC			; COMDAT

; 109  : {

$LN6:
	mov	BYTE PTR [rsp+24], r8b
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 110  :     grass* temp = &p_field->pool[p_index.y * p_field->dimensions.x + p_index.x];

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR p_index$[rbp+4]
	imul	ecx, DWORD PTR [rax+32]
	mov	eax, ecx
	add	eax, DWORD PTR p_index$[rbp]
	cdqe
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR p_field$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR temp$[rbp], rax

; 111  :     if(!(temp->grow_level > 0) && p_value)

	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax], 0
	jg	SHORT $LN2@grass_fiel
	movzx	eax, BYTE PTR p_value$[rbp]
	test	eax, eax
	je	SHORT $LN2@grass_fiel

; 112  :     {
; 113  :         temp->timer         = p_field->grow_timer_reset_value;

	mov	rax, QWORD PTR temp$[rbp]
	mov	rcx, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax+4], ecx

; 114  :         temp->source.x      += p_field->source_index_step;

	mov	rax, QWORD PTR temp$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR p_field$[rbp]
	add	eax, DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+8], eax

; 115  :         temp->source.x      *= p_value;

	movzx	eax, BYTE PTR p_value$[rbp]
	mov	rcx, QWORD PTR temp$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	imul	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+8], eax

; 116  :         temp->grow_level++;

	mov	rax, QWORD PTR temp$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx], eax

; 117  :     }

	jmp	SHORT $LN3@grass_fiel
$LN2@grass_fiel:

; 118  :     else if(!p_value)

	movzx	eax, BYTE PTR p_value$[rbp]
	test	eax, eax
	jne	SHORT $LN4@grass_fiel

; 119  :     {
; 120  :         temp->timer      = NULL;

	mov	rax, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rax+4], 0

; 121  :         temp->source.x   = NULL;

	mov	rax, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rax+8], 0

; 122  :         temp->grow_level = NULL;

	mov	rax, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rax], 0
$LN4@grass_fiel:
$LN3@grass_fiel:

; 123  :     }
; 124  :     grid_set_data_at(p_field->grid_layer, p_index, HAS_GRASS, p_value);

	movzx	eax, BYTE PTR p_value$[rbp]
	mov	r9d, eax
	mov	r8d, 8
	mov	rdx, QWORD PTR p_index$[rbp]
	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	grid_set_data_at

; 125  :     grid_set_data_at(p_field->grid_layer, p_index, GRASS_LEVEL, temp->grow_level);

	mov	rax, QWORD PTR temp$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	r8d, 7
	mov	rdx, QWORD PTR p_index$[rbp]
	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	grid_set_data_at

; 126  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
grass_field_toggle_active_at ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_spread
_TEXT	SEGMENT
adj_nodes$ = 8
open_count$ = 68
random_index$6 = 104
__$ArrayPad$ = 312
p_field$ = 352
p_index$ = 360
grass_spread PROC					; COMDAT

; 95   : {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 96   :     vector2 adj_nodes[NUM_DIRS];
; 97   :     int     open_count;
; 98   : 
; 99   :     if(grid_open_neighbours_at(p_field->grid_layer, adj_nodes, &open_count, p_index, HAS_GRASS))

	mov	DWORD PTR [rsp+32], 8
	mov	r9, QWORD PTR p_index$[rbp]
	lea	r8, QWORD PTR open_count$[rbp]
	lea	rdx, QWORD PTR adj_nodes$[rbp]
	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	grid_open_neighbours_at
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@grass_spre

; 100  :     {
; 101  :         vector2 random_index = adj_nodes[rand() % open_count];

	call	rand
	cdq
	idiv	DWORD PTR open_count$[rbp]
	mov	eax, edx
	cdqe
	mov	rax, QWORD PTR adj_nodes$[rbp+rax*8]
	mov	QWORD PTR random_index$6[rbp], rax

; 102  :         grass_field_toggle_active_at(p_field, random_index, true);

	mov	r8b, 1
	mov	rdx, QWORD PTR random_index$6[rbp]
	mov	rcx, QWORD PTR p_field$[rbp]
	call	grass_field_toggle_active_at
$LN2@grass_spre:

; 103  :     }
; 104  : }

	lea	rcx, QWORD PTR [rbp-48]
	lea	rdx, OFFSET FLAT:grass_spread$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
grass_spread ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_grow
_TEXT	SEGMENT
p_field$ = 224
p_grass$ = 232
p_index$ = 240
grass_grow PROC						; COMDAT

; 84   : {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 85   :     p_grass->grow_level++;

	mov	rax, QWORD PTR p_grass$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR p_grass$[rbp]
	mov	DWORD PTR [rcx], eax

; 86   :     p_grass->source.x += p_field->source_index_step;;

	mov	rax, QWORD PTR p_grass$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	rcx, QWORD PTR p_field$[rbp]
	add	eax, DWORD PTR [rcx+8]
	mov	rcx, QWORD PTR p_grass$[rbp]
	mov	DWORD PTR [rcx+8], eax

; 87   : 
; 88   :     grid_set_data_at(p_field->grid_layer, 

	mov	rax, QWORD PTR p_grass$[rbp]
	mov	r9d, DWORD PTR [rax]
	mov	r8d, 7
	mov	rdx, QWORD PTR p_index$[rbp]
	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR [rax+16]
	call	grid_set_data_at

; 89   :                      p_index, GRASS_LEVEL, 
; 90   :                      p_grass->grow_level);
; 91   : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
grass_grow ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_field_update
_TEXT	SEGMENT
temp$ = 8
index$ = 40
y$4 = 68
x$5 = 100
tv91 = 308
p_field$ = 352
grass_field_update PROC					; COMDAT

; 47   : {

$LN16:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 48   :     grass*  temp;
; 49   :     vector2 index;
; 50   : 
; 51   :     for(int y = 0; y < p_field->dimensions.y; y++)

	mov	DWORD PTR y$4[rbp], 0
	jmp	SHORT $LN4@grass_fiel
$LN2@grass_fiel:
	mov	eax, DWORD PTR y$4[rbp]
	inc	eax
	mov	DWORD PTR y$4[rbp], eax
$LN4@grass_fiel:
	mov	rax, QWORD PTR p_field$[rbp]
	mov	eax, DWORD PTR [rax+36]
	cmp	DWORD PTR y$4[rbp], eax
	jge	$LN3@grass_fiel

; 52   :     {
; 53   :         for(int x = 0; x < p_field->dimensions.x; x++)

	mov	DWORD PTR x$5[rbp], 0
	jmp	SHORT $LN7@grass_fiel
$LN5@grass_fiel:
	mov	eax, DWORD PTR x$5[rbp]
	inc	eax
	mov	DWORD PTR x$5[rbp], eax
$LN7@grass_fiel:
	mov	rax, QWORD PTR p_field$[rbp]
	mov	eax, DWORD PTR [rax+32]
	cmp	DWORD PTR x$5[rbp], eax
	jge	$LN6@grass_fiel

; 54   :         {
; 55   :             temp = &p_field->pool[y * p_field->dimensions.x + x];

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR y$4[rbp]
	imul	ecx, DWORD PTR [rax+32]
	mov	eax, ecx
	add	eax, DWORD PTR x$5[rbp]
	cdqe
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR p_field$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR temp$[rbp], rax

; 56   : 
; 57   :             if(temp->grow_level > 0 && 
; 58   :                temp->grow_level < 5 &&

	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax], 0
	jle	SHORT $LN8@grass_fiel
	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax], 5
	jge	SHORT $LN8@grass_fiel
	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jge	SHORT $LN8@grass_fiel

; 59   :                temp->timer < 0)
; 60   :             {
; 61   :                 index.x = x;

	mov	eax, DWORD PTR x$5[rbp]
	mov	DWORD PTR index$[rbp], eax

; 62   :                 index.y = y;

	mov	eax, DWORD PTR y$4[rbp]
	mov	DWORD PTR index$[rbp+4], eax

; 63   :                 grass_grow(p_field, temp, index);

	mov	r8, QWORD PTR index$[rbp]
	mov	rdx, QWORD PTR temp$[rbp]
	mov	rcx, QWORD PTR p_field$[rbp]
	call	grass_grow

; 64   :                 temp->timer = p_field->grow_timer_reset_value + 

	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax], 5
	jl	SHORT $LN14@grass_fiel
	mov	DWORD PTR tv91[rbp], 1
	jmp	SHORT $LN15@grass_fiel
$LN14@grass_fiel:
	mov	DWORD PTR tv91[rbp], 0
$LN15@grass_fiel:
	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR tv91[rbp]
	imul	ecx, DWORD PTR [rax+4]
	mov	eax, ecx
	mov	rcx, QWORD PTR p_field$[rbp]
	add	eax, DWORD PTR [rcx]
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+4], eax

; 65   :                               ((temp->grow_level >= 5) * 
; 66   :                               p_field->spread_timer_reset_value);
; 67   :             }

	jmp	SHORT $LN9@grass_fiel
$LN8@grass_fiel:

; 68   :             else if(temp->grow_level >= 5 &&

	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax], 5
	jl	SHORT $LN10@grass_fiel
	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jge	SHORT $LN10@grass_fiel

; 69   :                     temp->timer < 0)
; 70   :             {
; 71   :                 index.x = x;

	mov	eax, DWORD PTR x$5[rbp]
	mov	DWORD PTR index$[rbp], eax

; 72   :                 index.y = y;

	mov	eax, DWORD PTR y$4[rbp]
	mov	DWORD PTR index$[rbp+4], eax

; 73   :                 grass_spread(p_field, index);

	mov	rdx, QWORD PTR index$[rbp]
	mov	rcx, QWORD PTR p_field$[rbp]
	call	grass_spread

; 74   :                 temp->timer = p_field->spread_timer_reset_value;

	mov	rax, QWORD PTR temp$[rbp]
	mov	rcx, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx

; 75   :             }

	jmp	SHORT $LN11@grass_fiel
$LN10@grass_fiel:

; 76   :             else if(temp->timer >= 0)

	mov	rax, QWORD PTR temp$[rbp]
	cmp	DWORD PTR [rax+4], 0
	jl	SHORT $LN12@grass_fiel

; 77   :                 temp->timer--;

	mov	rax, QWORD PTR temp$[rbp]
	mov	eax, DWORD PTR [rax+4]
	dec	eax
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+4], eax
$LN12@grass_fiel:
$LN11@grass_fiel:
$LN9@grass_fiel:

; 78   :         }

	jmp	$LN5@grass_fiel
$LN6@grass_fiel:

; 79   :     }

	jmp	$LN2@grass_fiel
$LN3@grass_fiel:

; 80   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:grass_field_update$rtcFrameData
	call	_RTC_CheckStackVars
	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
grass_field_update ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\CPP-Programming\Lama\Lama\Lama\grass.c
;	COMDAT grass_field_init
_TEXT	SEGMENT
temp$ = 8
y$1 = 36
x$2 = 68
p_field$ = 320
p_grid$ = 328
p_dimension$ = 336
p_source_rect$ = 344
p_grow_timer_reset_value$ = 352
p_spread_timer_reset_value$ = 360
p_animation_step$ = 368
p_size$ = 376
grass_field_init PROC					; COMDAT

; 17   : {

$LN9:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rsi
	push	rdi
	sub	rsp, 320				; 00000140H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 80					; 00000050H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	lea	rcx, OFFSET FLAT:__9F64F477_grass@c
	call	__CheckForDebuggerJustMyCode

; 18   :     grass* temp = NULL;

	mov	QWORD PTR temp$[rbp], 0

; 19   : 
; 20   :     p_field->dimensions                 = p_dimension;

	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR p_dimension$[rbp]
	mov	QWORD PTR [rax+32], rcx

; 21   :     p_field->grow_timer_reset_value     = p_grow_timer_reset_value;

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR p_grow_timer_reset_value$[rbp]
	mov	DWORD PTR [rax], ecx

; 22   :     p_field->source_index_step          = p_animation_step;

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR p_animation_step$[rbp]
	mov	DWORD PTR [rax+8], ecx

; 23   :     p_field->spread_timer_reset_value   = p_spread_timer_reset_value;

	mov	rax, QWORD PTR p_field$[rbp]
	mov	ecx, DWORD PTR p_spread_timer_reset_value$[rbp]
	mov	DWORD PTR [rax+4], ecx

; 24   :     p_field->grid_layer                 = p_grid;

	mov	rax, QWORD PTR p_field$[rbp]
	mov	rcx, QWORD PTR p_grid$[rbp]
	mov	QWORD PTR [rax+16], rcx

; 25   :     p_field->pool                       = (grass*)calloc(p_dimension.x * p_dimension.y, 

	mov	eax, DWORD PTR p_dimension$[rbp+4]
	mul	DWORD PTR p_dimension$[rbp]
	mov	eax, eax
	mov	rcx, -1
	cmovo	rax, rcx
	mov	edx, 40					; 00000028H
	mov	rcx, rax
	call	QWORD PTR __imp_calloc
	mov	rcx, QWORD PTR p_field$[rbp]
	mov	QWORD PTR [rcx+24], rax

; 26   :                                                          sizeof(grass));
; 27   : 
; 28   :     for(int y = 0; y < p_dimension.y; y++)

	mov	DWORD PTR y$1[rbp], 0
	jmp	SHORT $LN4@grass_fiel
$LN2@grass_fiel:
	mov	eax, DWORD PTR y$1[rbp]
	inc	eax
	mov	DWORD PTR y$1[rbp], eax
$LN4@grass_fiel:
	mov	eax, DWORD PTR p_dimension$[rbp+4]
	cmp	DWORD PTR y$1[rbp], eax
	jge	$LN3@grass_fiel

; 29   :     {
; 30   :         for(int x = 0; x < p_dimension.x; x++)

	mov	DWORD PTR x$2[rbp], 0
	jmp	SHORT $LN7@grass_fiel
$LN5@grass_fiel:
	mov	eax, DWORD PTR x$2[rbp]
	inc	eax
	mov	DWORD PTR x$2[rbp], eax
$LN7@grass_fiel:
	mov	eax, DWORD PTR p_dimension$[rbp]
	cmp	DWORD PTR x$2[rbp], eax
	jge	$LN6@grass_fiel

; 31   :         {
; 32   :             temp = &p_field->pool[y * p_dimension.y + x];

	mov	eax, DWORD PTR y$1[rbp]
	imul	eax, DWORD PTR p_dimension$[rbp+4]
	add	eax, DWORD PTR x$2[rbp]
	cdqe
	imul	rax, rax, 40				; 00000028H
	mov	rcx, QWORD PTR p_field$[rbp]
	add	rax, QWORD PTR [rcx+24]
	mov	QWORD PTR temp$[rbp], rax

; 33   : 
; 34   :             temp->source = p_source_rect;

	mov	rax, QWORD PTR temp$[rbp]
	lea	rdi, QWORD PTR [rax+8]
	mov	rsi, QWORD PTR p_source_rect$[rbp]
	mov	ecx, 16
	rep movsb

; 35   : 
; 36   :             temp->destination.x = x * p_size;

	mov	eax, DWORD PTR x$2[rbp]
	imul	eax, DWORD PTR p_size$[rbp]
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+24], eax

; 37   :             temp->destination.y = y * p_size;

	mov	eax, DWORD PTR y$1[rbp]
	imul	eax, DWORD PTR p_size$[rbp]
	mov	rcx, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rcx+28], eax

; 38   :             temp->destination.w = p_size;

	mov	rax, QWORD PTR temp$[rbp]
	mov	ecx, DWORD PTR p_size$[rbp]
	mov	DWORD PTR [rax+32], ecx

; 39   :             temp->destination.h = p_size;

	mov	rax, QWORD PTR temp$[rbp]
	mov	ecx, DWORD PTR p_size$[rbp]
	mov	DWORD PTR [rax+36], ecx

; 40   : 
; 41   :             temp->timer = 0;

	mov	rax, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rax+4], 0

; 42   :             temp->grow_level = 0;

	mov	rax, QWORD PTR temp$[rbp]
	mov	DWORD PTR [rax], 0

; 43   :         }

	jmp	$LN5@grass_fiel
$LN6@grass_fiel:

; 44   :     }

	jmp	$LN2@grass_fiel
$LN3@grass_fiel:

; 45   : }

	lea	rsp, QWORD PTR [rbp+288]
	pop	rdi
	pop	rsi
	pop	rbp
	ret	0
grass_field_init ENDP
_TEXT	ENDS
END
